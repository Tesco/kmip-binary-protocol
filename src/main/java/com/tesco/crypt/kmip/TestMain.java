package com.tesco.crypt.kmip;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.tesco.crypt.kmip.operation.TTLVToBatchItemsDecoder;
import com.tesco.crypt.kmip.ttlv.BytesToTTLVDecoder;
import lombok.SneakyThrows;

import java.io.ByteArrayInputStream;

import static com.tesco.crypt.kmip.ttlv.Hex.hexToBytes;

public class TestMain {
    public static void main(String[] args) throws JsonProcessingException {
        printRequestAndResponse(
            "42007801000000604200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f010000001842005c05000000040000001e000000004200790100000000",
            "42007b01000000d042007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893eb42000d0200000004000000010000000042000f010000007842005c05000000040000001e0000000042007f0500000004000000000000000042007c0100000050420069010000002042006a0200000004000000010000000042006b02000000040000000100000000420069010000002042006a0200000004000000010000000042006b02000000040000000000000000"
        );
        printRequestAndResponse(
            "42007801000000704200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f010000002842005c05000000040000001e000000004200930800000008514c4b43010000004200790100000000",
            "42007b01000000e042007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893eb42000d0200000004000000010000000042000f010000008842005c05000000040000001e000000004200930800000008514c4b430100000042007f0500000004000000000000000042007c0100000050420069010000002042006a0200000004000000010000000042006b02000000040000000100000000420069010000002042006a0200000004000000010000000042006b02000000040000000000000000"
        );
        printRequestAndResponse(
            "42007801000000604200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f010000001842005c05000000040000001e000000004200790100000000",
            "42007b01000000d042007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893f042000d0200000004000000010000000042000f010000007842005c05000000040000001e0000000042007f0500000004000000000000000042007c0100000050420069010000002042006a0200000004000000010000000042006b02000000040000000100000000420069010000002042006a0200000004000000010000000042006b02000000040000000000000000"
        );
        printRequestAndResponse(
            "42007801000001304200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f01000000e842005c050000000400000001000000004200930800000008514c4b430100000042007901000000c04200570500000004000000020000000042009101000000a8420008010000003042000a070000001743727970746f6772617068696320416c676f726974686d0042000b05000000040000000300000000420008010000003042000a070000001843727970746f67726170686963205573616765204d61736b42000b02000000040000000c00000000420008010000003042000a070000001443727970746f67726170686963204c656e6774680000000042000b02000000040000010000000000",
            "42007b01000002a042007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893f142000d0200000004000000010000000042000f010000024842005c050000000400000001000000004200930800000008514c4b430100000042007f0500000004000000000000000042007c010000021042005705000000040000000200000000420094070000002431643531353531652d323864382d356636312d336330632d6436353437346134343533630000000042009101000001c8420008010000003042000a07000000154f7065726174696f6e20506f6c696379204e616d6500000042000b070000000764656661756c7400420008010000004842000a070000000a792d4b6579204e616d6500000000000042000b07000000284b45592d31643531353531652d323864382d356636312d336330632d643635343734613434353363420008010000003842000a070000000a792d496e7374616e636500000000000042000b07000000184856465648696a5958324538444e5a55644b524650413d3d420008010000002842000a0700000009792d43757272656e740000000000000042000b06000000080000000000000001420008010000003042000a0700000013792d44657374726f79205065726d6974746564000000000042000b06000000080000000000000001420008010000002842000a070000000a792d4d6972726f72656400000000000042000b06000000080000000000000001420008010000003042000a0700000012792d52652d6b6579205065726d697474656400000000000042000b06000000080000000000000001420008010000002842000a070000000e792d41636365737320436865636b000042000b05000000040000000100000000"
        );
        printRequestAndResponse(
            "42007801000000604200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f010000001842005c05000000040000001e000000004200790100000000",
            "42007b01000000d042007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893f242000d0200000004000000010000000042000f010000007842005c05000000040000001e0000000042007f0500000004000000000000000042007c0100000050420069010000002042006a0200000004000000010000000042006b02000000040000000100000000420069010000002042006a0200000004000000010000000042006b02000000040000000000000000"
        );
        printRequestAndResponse(
            "42007801000000a04200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f010000005842005c05000000040000000a000000004200930800000008514c4b43010000004200790100000030420094070000002431643531353531652d323864382d356636312d336330632d64363534373461343435336300000000",
            "42007b010000014042007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893f242000d0200000004000000010000000042000f01000000e842005c05000000040000000a000000004200930800000008514c4b430100000042007f0500000004000000000000000042007c01000000b042005705000000040000000200000000420094070000002431643531353531652d323864382d356636312d336330632d6436353437346134343533630000000042008f010000006842004001000000604200420500000004000000010000000042004501000000284200430800000020b54a4cd3bbe2375efe76d83376790ed675936563de032ee20370b74830a3cb4a4200280500000004000000030000000042002a02000000040000010000000000"
        );
        printRequestAndResponse(
            "42007801000000b04200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f010000006842005c05000000040000000b000000004200930800000008514c4b43010000004200790100000040420094070000002431643531353531652d323864382d356636312d336330632d6436353437346134343533630000000042000a07000000055374617465000000",
            "42007b01000000e842007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893f242000d0200000004000000010000000042000f010000009042005c05000000040000000b000000004200930800000008514c4b430100000042007f0500000004000000000000000042007c0100000058420094070000002431643531353531652d323864382d356636312d336330632d64363534373461343435336300000000420008010000002042000a0700000005537461746500000042000b05000000040000000100000000"
        );
        printRequestAndResponse(
            "42007801000000a04200770100000038420069010000002042006a0200000004000000010000000042006b0200000004000000010000000042000d0200000004000000010000000042000f010000005842005c050000000400000012000000004200930800000008514c4b43010000004200790100000030420094070000002431643531353531652d323864382d356636312d336330632d64363534373461343435336300000000",
            "42007b01000000c042007a0100000048420069010000002042006a0200000004000000010000000042006b020000000400000001000000004200920900000008000000005ee893f242000d0200000004000000010000000042000f010000006842005c050000000400000012000000004200930800000008514c4b430100000042007f0500000004000000000000000042007c0100000030420094070000002431643531353531652d323864382d356636312d336330632d64363534373461343435336300000000"
        );

    }

    private static void printRequestAndResponse(String requestHexBytes, String responseHexBytes) throws JsonProcessingException {
        printMessage(requestHexBytes);
        printMessage(responseHexBytes);
        System.out.println("\n\n");
    }

    private static void printMessage(String hexBytes) {
        new BytesToTTLVDecoder().decode(new ByteArrayInputStream(hexToBytes(hexBytes)), ttlv -> {
            new TTLVToBatchItemsDecoder<>().decode(ttlv, object -> {
                System.out.println("# " + object.getClass().getSimpleName());
                print("Message", object);
                print("TTLV", ttlv);
                print("Hex", hexBytes);
            });
        });
    }

    @SneakyThrows
    @SuppressWarnings("UnusedReturnValue")
    private static <T> T print(String name, T object) {
        System.out.println("<details>\n <summary>" + name + "</summary>\n\n```json\n" + (object instanceof String ? object : new ObjectMapper().writerWithDefaultPrettyPrinter().writeValueAsString(object)) + "\n```\n</details>\n\n");
        return object;
    }
}
